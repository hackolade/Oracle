/*
* Copyright © 2016-2021 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of 
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in 
* the agreement/contract under which the software has been supplied. 


In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item. 
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing 
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			}, 
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/
[
	{
		"lowerTab": "Details",
		"structure": [
			{
				"propertyName": "If not exists",
				"propertyKeyword": "ifNotExist",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Authorization",
				"propertyKeyword": "authorization",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Grant statement",
				"propertyKeyword": "grant_statement",
				"propertyTooltip": "Use this clause to grant object privileges on objects you own to other users.",
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"containerLevelKeys": []
	},
	{
		"lowerTab": "Synonyms",
		"structure": [
			{
				"propertyName": "Synonyms",
				"propertyType": "group",
				"propertyKeyword": "synonyms",
				"shouldValidate": false,
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Name",
						"propertyKeyword": "synonymName",
						"propertyType": "text",
						"requiredProperty": true
					},
					{
						"propertyName": "Public",
						"propertyKeyword": "synonymPublic",
						"propertyTooltip": "Make the synonym PUBLIC so that it can be accessed by users from PUBLIC group.",
						"propertyType": "checkbox",
						"defaultValue": false
					},
					{
						"propertyName": "Or replace",
						"propertyKeyword": "synonymOrReplace",
						"propertyTooltip": "Replace the synonym if it already exists.",
						"propertyType": "checkbox",
						"defaultValue": false
					},
					{
						"propertyName": "Editionable",
						"propertyKeyword": "synonymEditionable",
						"propertyTooltip": "",
						"propertyType": "select",
						"defaultValue": "",
						"options": [
							"",
							"EDITIONABLE",
							"NONEDITIONABLE"
						]
					},
					{
						"propertyName": "Entity",
						"propertyKeyword": "synonymEntityId",
						"propertyTooltip": "Chose entity to create synonym for",
						"propertyType": "selecthashed",
						"fieldParentCategory": "collection",
						"template": [
							"entities",
							"views",
							"definitions"
						],
						"withEmptyOption": true,
						"selectedBucketEntitiesOnly": true,
						"requiredProperty": true
					}
				]
			}
		]
	},
	{
		"lowerTab": "Sequences",
		"structure": [
			{
				"propertyName": "Sequences",
				"propertyType": "group",
				"propertyKeyword": "sequences",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Sequence name",
						"propertyKeyword": "sequenceName",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "If not exists",
						"propertyKeyword": "ifNotExist",
						"propertyTooltip": "Do not throw an error if a relation with the same name already exists. A notice is issued in this case. Note that there is no guarantee that the existing relation is anything like the sequence that would have been created — it might not even be a sequence.",
						"propertyType": "checkbox"
					},
					{
						"propertyName": "Type",
						"propertyKeyword": "type",
						"propertyTooltip": "Specify session if you want to sequence returns a unique range of sequence numbers only within a session, or global to create a regular sequence.",
						"propertyType": "select",
						"options": [
							"",
							"global",
							"session"
						]
					},
					{
						"propertyName": "Sharing",
						"propertyKeyword": "sharing",
						"propertyTooltip": "If you omit this clause, then the database uses the value of the DEFAULT_SHARING initialization parameter to determine the sharing attribute of the sequence. A metadata link shares the sequence’s metadata, but its data is unique to each container. A data link shares the sequence, and its data is the same for all containers in the application container. If None, the sequence is not shared.",
						"propertyType": "select",
						"options": [
							"",
							"metadata",
							"data",
							"none"
						]
					},
					{
						"propertyName": "Start with",
						"propertyKeyword": "start",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "Allows the sequence to begin anywhere. The default starting value is minvalue for ascending sequences and maxvalue for descending ones."
					},
					{
						"propertyName": "Increment by",
						"propertyKeyword": "increment",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "The data type determines the default minimum and maximum values of the sequence."
					},
					{
						"propertyName": "Min value",
						"propertyKeyword": "minValue",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "Determines the minimum value a sequence can generate. If this clause is not supplied is specified, then defaults will be used. The default for an ascending sequence is 1. The default for a descending sequence is the minimum value of the data type."
					},
					{
						"propertyName": "Max value",
						"propertyKeyword": "maxValue",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "Determines the maximum value for the sequence. If this clause is not supplied is specified, then default values will be used. The default for an ascending sequence is the maximum value of the data type. The default for a descending sequence is -1."
					},
					{
						"propertyName": "Cycle",
						"propertyKeyword": "cycle",
						"propertyTooltip": "Specify CYCLE to indicate that the sequence continues to generate values after reaching either its maximum or minimum value. Specify NOCYCLE to indicate that the sequence cannot generate more values after reaching its maximum or minimum value. This is the default.",
						"propertyType": "select",
						"options": [
							"",
							"cycle",
							"nocycle"
						]
					},
					{
						"propertyName": "Cache",
						"propertyKeyword": "cache",
						"propertyTooltip": "Specify how many values of the sequence the database preallocates and keeps in memory for faster access. Specify NOCACHE to indicate that values of the sequence are not preallocated. If you omit both CACHE and NOCACHE, then the database caches 20 sequence numbers by default.",
						"propertyType": "select",
						"options": [
							"",
							"cache",
							"nocache"
						]
					},
					{
						"propertyName": "Cache value",
						"propertyKeyword": "cacheValue",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "This integer value can have 28 or fewer digits. The minimum value for this parameter is 2.",
						"minValue": 2,
						"dependency": {
							"key": "cache",
							"value": "cache"
						}
					},
					{
						"propertyName": "Order",
						"propertyKeyword": "order",
						"propertyTooltip": "Specify ORDER to guarantee that sequence numbers are generated in order of request. Specify NOORDER if you do not want to guarantee sequence numbers are generated in order of request. This is the default.",
						"propertyType": "select",
						"options": [
							"",
							"order",
							"noorder"
						]
					},
					{
						"propertyName": "Keep",
						"propertyKeyword": "keep",
						"propertyTooltip": "Specify KEEP if you want NEXTVAL to retain its original value during replay for Application Continuity.  Specify NOKEEP if you do not want NEXTVAL to retain its original value during replay for Application Continuity. This is the default.",
						"propertyType": "select",
						"options": [
							"",
							"keep",
							"nokeep"
						]
					},
					{
						"propertyName": "Scale",
						"propertyKeyword": "scale",
						"propertyTooltip": "When you use SCALE it is highly recommended that you not use ORDER simultaneously on the sequence. Use SCALE to enable sequence scalability. When SCALE is specified, a numeric offset is affixed to the beginning of the sequence which removes all duplicates in generated values.",
						"propertyType": "select",
						"options": [
							"",
							"scale",
							"noscale"
						]
					},
					{
						"propertyName": "Scale extend",
						"propertyKeyword": "scaleExtend",
						"propertyTooltip": "If you specify EXTEND with SCALE the generated sequence values are all of length (x+y), where x is the length of the scalable offset (default value is 6), and y is the maximum number of digits in the sequence (maxvalue/minvalue). With the NOEXTEND setting, the generated sequence values are at most as wide as the maximum number of digits in the sequence (maxvalue/minvalue). This setting is useful for integration with existing applications where sequences are used to populate fixed width columns.",
						"propertyType": "select",
						"options": [
							"",
							"extend",
							"noextend"
						],
						"dependency": {
							"key": "scale",
							"value": "scale"
						}
					},
					{
						"propertyName": "Shard",
						"propertyKeyword": "shard",
						"propertyTooltip": "The sequence object is created as a global, all-shards sharded object that returns unique sequence values across all shards.",
						"propertyType": "select",
						"options": [
							"",
							"shard",
							"noshard"
						]
					},
					{
						"propertyName": "Shard extend",
						"propertyKeyword": "shardExtend",
						"propertyTooltip": "When you specify EXTEND with the SHARD clause, the generated sequence values are all of length (x + y), where x is the length of an(a) SHARD offset of size 4.  When you specify NOEXTEND, the generated sequence values are at most as wide as the maximum number of digits in the sequence maxvalue/minvalue. ",
						"propertyType": "select",
						"options": [
							"",
							"extend",
							"noextend"
						],
						"dependency": {
							"key": "shard",
							"value": "shard"
						}
					}
				]
			}
		]
	}
]
